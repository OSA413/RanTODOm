{"version":3,"sources":["app/StorageProvider.tsx","app/DataProvider.tsx","resources/plus.svg","app/overlay.tsx","app/List/List.tsx","app/header/header.tsx","app/main.tsx","App.tsx","reportWebVitals.tsx","index.tsx"],"names":["StorageType","StorageProvider","storageType","localstorage","storage","Init","localStorageType","localStorage","getItem","localStorageProvider","LoadData","SaveData","list","JSON","parse","setItem","stringify","Table","SelectedIndex","Get","Add","element","console","log","description","id","Math","round","random","Number","MAX_SAFE_INTEGER","elements","push","Delete","splice","findIndex","x","DataProvider","Overlay","update","setFocus","ref","current","focus","input","createRef","addItem","value","trim","selectRandom","length","className","type","placeholder","autoFocus","onKeyPress","e","key","onBlur","setTimeout","includes","document","activeElement","tagName","onClick","src","plus","alt","TodoList","useReducer","forceUpdate","map","i","index","undefined","TodoElement","donate","window","open","Header","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5deb30bd.chunk.js","sourcesContent":["import { List } from \"./interfaces/ListInterface\";\r\n\r\nenum StorageType {\r\n    \"localstorage\"\r\n}\r\n\r\ninterface Storage {\r\n    LoadData(): List;\r\n    SaveData(list :List): void;\r\n}\r\n\r\nclass StorageProvider {\r\n    static storageType = StorageType.localstorage;\r\n    static storage?: Storage;\r\n\r\n    static Init = () => {\r\n        let localStorageType = localStorage.getItem(\"storageType\");\r\n        if (localStorageType !== null) {\r\n            StorageProvider.storageType = StorageType[localStorageType as keyof typeof StorageType];\r\n            switch (StorageProvider.storageType) {\r\n            }\r\n        }\r\n        else {\r\n            StorageProvider.storage = new localStorageProvider();\r\n        }\r\n    }\r\n\r\n    static LoadData = () => StorageProvider.storage?.LoadData();\r\n    static SaveData = (list: List) => StorageProvider.storage?.SaveData(list);\r\n}\r\n\r\nclass localStorageProvider implements Storage {\r\n    LoadData = () :List =>{\r\n        return JSON.parse(localStorage.getItem(\"list\") ?? \"{ \\\"elements\\\": []}\");\r\n    }\r\n\r\n    SaveData = (list: List) => {\r\n        localStorage.setItem(\"list\", JSON.stringify(list));\r\n    }\r\n}\r\n\r\nexport default StorageProvider;","import { ListElement, List } from \"./interfaces/ListInterface\";\r\nimport StorageProvider from \"./StorageProvider\";\r\n\r\n\r\nclass Table {\r\n    static list: List;\r\n    static SelectedIndex: number|undefined;\r\n    static Get = () => Table.list;\r\n    static Add = (element: ListElement|string) => {\r\n        console.log(element);\r\n        if (typeof element === \"string\")\r\n            element = {description: element, id: Math.round(Math.random() * Number.MAX_SAFE_INTEGER)};\r\n\r\n        Table.list.elements.push(element);\r\n        StorageProvider.SaveData(Table.Get());\r\n    }\r\n    static Delete = (id: ListElement[\"id\"]) => {\r\n        Table.list.elements.splice(Table.list.elements.findIndex(x => x.id === id), 1);\r\n        StorageProvider.SaveData(Table.Get());\r\n    }\r\n\r\n    static Init = (list?: List) => {\r\n        Table.list = list ?? { elements: []};\r\n    }\r\n}\r\n\r\nclass DataProvider {\r\n    static Table = Table;\r\n\r\n    static Init = () => {\r\n        StorageProvider.Init();\r\n        Table.Init(StorageProvider.LoadData());\r\n    } \r\n}\r\n\r\nexport default DataProvider;","export default __webpack_public_path__ + \"static/media/plus.86fba113.svg\";","import { createRef } from \"react\";\r\nimport DataProvider from \"./DataProvider\";\r\n\r\nimport plus from \"./../resources/plus.svg\";\r\n\r\nconst Overlay = ({update}: {update: ()=>any}) => {\r\n    const setFocus = (ref: React.RefObject<HTMLInputElement>) => ref.current?.focus();\r\n    const input = createRef<HTMLInputElement>();\r\n\r\n    const focus = () => setTimeout(() => {\r\n        if ([\"INPUT\", \"SELECT\"].includes(document.activeElement?.tagName ?? \"\")) return;\r\n        setFocus(input);\r\n    }, 500)\r\n\r\n    const addItem = (): boolean => {\r\n        if (input.current === null) return false;\r\n\r\n        let text = input.current.value.trim();\r\n        if (text === \"\") return false;\r\n\r\n        DataProvider.Table.Add(input.current.value);\r\n        input.current.value = \"\";\r\n        setFocus(input);\r\n        update();\r\n        return true;\r\n    }\r\n\r\n    const selectRandom = () => {\r\n        DataProvider.Table.SelectedIndex = Math.round(Math.random() * (DataProvider.Table.Get().elements.length - 1));\r\n        update();\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full fixed bottom-4 px-4 flex gap-4\">\r\n            <input type=\"text\" className=\"input-bar\" placeholder=\"Enter TODO text\" ref={input} autoFocus\r\n            onKeyPress={e => e.key === \"Enter\" && (addItem() || selectRandom())}\r\n            onBlur={focus}/>\r\n            <div className=\"overlay-button\" onClick={selectRandom}>üé≤</div>\r\n            <div className=\"overlay-button\" onClick={addItem}><img src={plus} alt=\"+\"/></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overlay;","import React, { useReducer } from \"react\"\r\nimport DataProvider from \"../DataProvider\"\r\nimport { ListElement } from \"../interfaces/ListInterface\"\r\n\r\nconst TodoElement = (element: ListElement, index: number, forceUpdate: React.DispatchWithoutAction) => {\r\n    const del = () => {\r\n        if (DataProvider.Table.SelectedIndex === index)\r\n            DataProvider.Table.SelectedIndex = undefined;\r\n        DataProvider.Table.Delete(element.id);\r\n        forceUpdate();\r\n    }\r\n\r\n    return (\r\n        <div key={index}\r\n            className={\"w-full h-16 my-2 rounded-xl text-3xl flex items-center px-4 \" +\r\n            (DataProvider.Table.SelectedIndex === index ? \"bg-gray-300\" : \"bg-gray-100\")}>\r\n            <div className=\"w-12 text-right\">{index + 1}</div>\r\n            <div className=\"w-0.5 h-5/6 bg-gray-400 mx-3\"/>\r\n            <div className=\"\">{element.description}</div>\r\n            <div className=\"ml-auto select-none cursor-pointer\"\r\n            onClick={del}>‚ùå</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TodoList = () => {\r\n    const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n    let elements = DataProvider.Table.Get().elements.map((x, i) => TodoElement(x, i, forceUpdate))\r\n\r\n    return (\r\n        <div className=\"px-4\">\r\n            {elements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","const donate = () => {\r\n    window.open(\"https://ko-fi.com/osa413\");\r\n}\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"w-full h-16 mb-4 flex bg-blue-400 justify-between\">\r\n            <div className=\"text-white font-bold self-center text-center text-xl mx-4 p-2 bg-blue-700 rounded-lg\"\r\n            >‚öô Settings</div>\r\n            <div className=\"text-white font-bold self-center text-center text-5xl\">RanTODOm</div>\r\n            <div className=\"text-white font-bold self-center text-center text-xl mx-4 p-2 bg-red-400 rounded-lg\"\r\n            onClick={donate}>‚òï Donate</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import Overlay from \"./overlay\";\r\nimport TodoList from \"./List/List\";\r\nimport Header from \"./header/header\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst Main = () => {\r\n    const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n\r\n    return (\r\n        <div>\r\n            <Overlay update={forceUpdate}/>\r\n            <Header />\r\n            <TodoList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import Main from \"./app/main\";\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry: ReportHandler | undefined = undefined) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport DataProvider from './app/DataProvider';\nDataProvider.Init();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}